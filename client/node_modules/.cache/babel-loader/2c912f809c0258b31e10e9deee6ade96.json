{"ast":null,"code":"import _objectSpread from \"/Users/sharon.santana/Desktop/prod_projects/InventorySystem/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/sharon.santana/Desktop/prod_projects/InventorySystem/client/src/containers/UpdateInventoryProduct/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport './style.css';\n\nclass UpdateInventoryProduct extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let inventory_id = this.state.inventory_id;\n      let product_name = this.state.product_name;\n      let product_price = this.state.product_price;\n      let product_qty = this.state.product_qty;\n      let product_comment = this.state.product_comment;\n\n      if (product_name === '') {\n        swal(\"Oops!\", \"Product Name is a required field.\", \"error\");\n      } else if (product_price === '') {\n        swal(\"Oops!\", \"Product Price is a required field.\", \"error\");\n      } else if (this.isValidFloat(product_price) === false) {\n        swal(\"Oops!\", \"Enter a Valid Product Price. Example: 0.00\", \"error\");\n      } else if (product_qty === '') {\n        swal(\"Oops!\", \"Product Qty is a required field.\", \"error\");\n      }\n\n      if (product_name !== '' && product_price !== '' && this.isValidFloat(product_price) === true && product_qty !== '') {\n        try {\n          // update the product \n          const product_insert_response = await axios.put(`http://localhost:3001/api/inventory/${inventory_id}`, {\n            inventory_id: inventory_id,\n            product_name: product_name,\n            local_price: product_price,\n            product_quantity: product_qty,\n            product_comment: product_comment\n          }, {\n            headers: {\n              'Accept': 'application/json'\n            }\n          });\n\n          if (product_insert_response.status === 200) {\n            swal(\"Success!\", \"The product has been updated!\", \"info\").then(value => {\n              window.location.href = \"/stores\";\n            });\n          }\n        } catch (e) {\n          console.log(e);\n          swal(\"Oops!\", \"Something went wrong adding this product.\", \"error\"); // adding product to inventory depends on a successful product creation first\n        }\n      }\n    };\n\n    this.state = {\n      inventory_id: '',\n      product_name: '',\n      product_price: '',\n      product_qty: '',\n      product_comment: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this); // this.handleSelectChange = this.handleSelectChange.bind(this);\n\n    this.isValidFloat = this.isValidFloat.bind(this);\n  }\n\n  componentDidMount() {\n    const inventory_id = this.props.match.params.inventory_id;\n    const store_id = this.props.match.params.store_id;\n    this.setState({\n      inventory_id: inventory_id\n    }); // this.getProductInfo();\n\n    axios.get(`http://localhost:3001/api/inventory/${inventory_id}`).then(response => {\n      console.log(response);\n      this.setState({\n        product_name: response.data[0].product_name,\n        product_price: response.data[0].local_price,\n        product_qty: response.data[0].quantity,\n        product_comment: response.data[0].comment\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  handleInputChange(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => _objectSpread({}, prevState, {\n      [name]: value\n    }), () => console.log(this.state));\n  }\n\n  isValidFloat(num) {\n    let regex = /^\\d*\\.?\\d*$/;\n\n    if (regex.test(num)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"container-fluid\",\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Update Product\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Product Name: \", this.state.product_name), React.createElement(\"div\", {\n      className: \"add_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Product Price  (*):\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"product_price\",\n      className: \"form-control\",\n      name: \"product_price\",\n      onChange: e => this.handleInputChange(e),\n      value: this.state.product_price || '0.00',\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"add_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Product Qty (*):\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"product_qty\",\n      className: \"form-control\",\n      name: \"product_qty\",\n      onChange: e => this.handleInputChange(e),\n      value: this.state.product_qty || '',\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"add_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Product Comments (optional):\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"product_comment\",\n      className: \"form-control\",\n      name: \"product_comment\",\n      onChange: e => this.handleInputChange(e),\n      value: this.state.product_comment || '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"add_store_action_btn_block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      className: \"btn btn-outline-primary action_btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Link, {\n      to: `/stores`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-danger action_btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default UpdateInventoryProduct;","map":{"version":3,"sources":["/Users/sharon.santana/Desktop/prod_projects/InventorySystem/client/src/containers/UpdateInventoryProduct/index.js"],"names":["React","Component","Link","swal","axios","UpdateInventoryProduct","constructor","props","handleSubmit","event","preventDefault","inventory_id","state","product_name","product_price","product_qty","product_comment","isValidFloat","product_insert_response","put","local_price","product_quantity","headers","status","then","value","window","location","href","e","console","log","handleInputChange","bind","componentDidMount","match","params","store_id","setState","get","response","data","quantity","comment","catch","target","name","prevState","num","regex","test","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport './style.css';\n\nclass UpdateInventoryProduct extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inventory_id: '',\n            product_name: '',\n            product_price: '',\n            product_qty: '',\n            product_comment: ''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        // this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.isValidFloat = this.isValidFloat.bind(this);\n    }\n\n    componentDidMount() {\n        const { inventory_id } = this.props.match.params;\n        const { store_id } = this.props.match.params;\n        this.setState({ inventory_id: inventory_id });\n        // this.getProductInfo();\n\n        axios.get(`http://localhost:3001/api/inventory/${inventory_id}`)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    product_name: response.data[0].product_name,\n                    product_price: response.data[0].local_price,\n                    product_qty: response.data[0].quantity,\n                    product_comment: response.data[0].comment\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    handleInputChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n        }), () => console.log(this.state))\n    }\n\n    isValidFloat(num) {\n        let regex = /^\\d*\\.?\\d*$/;\n        if (regex.test(num)) {\n            return true;\n        }\n        return false;\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let inventory_id = this.state.inventory_id;\n        let product_name = this.state.product_name;\n        let product_price = this.state.product_price;\n        let product_qty = this.state.product_qty;\n        let product_comment = this.state.product_comment;\n\n        if (product_name === '') {\n            swal(\"Oops!\", \"Product Name is a required field.\", \"error\");\n        } else if (product_price === '') {\n            swal(\"Oops!\", \"Product Price is a required field.\", \"error\");\n        } else if (this.isValidFloat(product_price) === false) {\n            swal(\"Oops!\", \"Enter a Valid Product Price. Example: 0.00\", \"error\");\n        } else if (product_qty === '') {\n            swal(\"Oops!\", \"Product Qty is a required field.\", \"error\");\n        }\n\n        if (product_name !== '' && product_price !== '' && this.isValidFloat(product_price) === true && product_qty !== '') {\n            try {\n                // update the product \n                const product_insert_response = await axios.put(`http://localhost:3001/api/inventory/${inventory_id}`, { inventory_id:inventory_id, product_name: product_name, local_price: product_price, product_quantity:product_qty, product_comment: product_comment }, { headers: { 'Accept': 'application/json' } });\n                if (product_insert_response.status === 200) {\n                    swal(\"Success!\", \"The product has been updated!\", \"info\")\n                    .then((value) => {\n                        window.location.href = \"/stores\"\n                    })\n                }\n            } catch (e) {\n                console.log(e);\n                swal(\"Oops!\", \"Something went wrong adding this product.\", \"error\"); // adding product to inventory depends on a successful product creation first\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <form className=\"container-fluid\" encType=\"multipart/form-data\">\n                    <h2 className=\"header\">Update Product</h2>\n                    <h3>Product Name: {this.state.product_name}</h3>\n                    <div className=\"add_row\">\n                        <label>Product Price  (*):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_price\"\n                            className=\"form-control\"\n                            name={\"product_price\"}\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_price || '0.00'}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Product Qty (*):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_qty\"\n                            className=\"form-control\"\n                            name={\"product_qty\"}\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_qty || ''}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Product Comments (optional):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_comment\"\n                            className=\"form-control\"\n                            name=\"product_comment\"\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_comment || ''}\n                        />\n                    </div>\n                    <div className=\"add_store_action_btn_block\">\n                        <button onClick={this.handleSubmit} className=\"btn btn-outline-primary action_btn\">Submit</button>\n                        <Link to={`/stores`}><button className=\"btn btn-outline-danger action_btn\">Cancel</button></Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UpdateInventoryProduct;\n\n\n\n"]},"metadata":{},"sourceType":"module"}