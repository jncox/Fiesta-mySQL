{"ast":null,"code":"var _jsxFileName = \"/Users/sharon.santana/Desktop/prod_projects/InventorySystem/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport swal from 'sweetalert'; // import containers\n\nimport AddNewStore from './containers/AddNewStore';\nimport AddNewProduct from './containers/AddNewProduct';\nimport AddProductToStore from './containers/AddProductToStore';\nimport UpdateInventoryProduct from './containers/UpdateInventoryProduct';\nimport ViewStoreDetails from './containers/ViewStoreDetails';\nimport AddNewInventory from './containers/AddNewInventory'; // import Components\n\nimport Nav from './components/Nav';\nimport Dashboard from './components/Dashboard';\nimport Stores from './components/Stores';\nimport Products from './components/Products';\nimport Inventory from './components/Inventory';\nimport Footer from './components/Footer';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleDeleteStore = id => {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Once deleted, you will not be able to recover this store's records!\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          // handle the deletion of a store entry in the DB\n          axios.delete(`http://localhost:3001/api/stores/${id}`, {\n            headers: {\n              'Accept': 'application/json'\n            }\n          }).then(response => {\n            // fetch the new list of stores\n            axios.get('/api/stores').then(response => {\n              this.setState({\n                stores: response.data\n              });\n            }).catch(e => {\n              console.log(e);\n            });\n          }).catch(e => {\n            console.log(e);\n          });\n          swal(\"Success! The Store record has been deleted!\", {\n            icon: \"success\"\n          });\n        }\n      });\n    };\n\n    this.handleDeleteProduct = id => {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Once deleted, you will not be able to recover this store's records!\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          // handle the deletion of a product across all stores\n          axios.delete(`http://localhost:3001/api/products/${id}`, {\n            headers: {\n              'Accept': 'application/json'\n            }\n          }).then(response => {\n            // fetch the new list of products\n            axios.get('/api/products').then(response => {\n              this.setState({\n                products: response.data\n              });\n            }).catch(e => {\n              console.log(e);\n            });\n          }).catch(e => {\n            console.log(e);\n          });\n        }\n      });\n    };\n\n    this.state = {\n      stores: [],\n      products: [],\n      inventory: []\n    };\n    this.handleDeleteStore = this.handleDeleteStore.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('/api/stores').then(response => {\n      this.setState({\n        stores: response.data\n      }); // console.log(this.state);\n    }).catch(e => {\n      console.log(e);\n    });\n    axios.get('/api/products').then(response => {\n      this.setState({\n        products: response.data\n      }); // console.log(this.state);\n    }).catch(e => {\n      console.log(e);\n    });\n    axios.get('/api/inventory').then(response => {\n      this.setState({\n        inventory: response.data\n      }); // console.log(this.state);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/stores\",\n      render: () => React.createElement(Stores, {\n        stores: this.state.stores,\n        handleDeleteStore: this.handleDeleteStore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/stores/add\",\n      component: AddNewStore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/stores/products/:store_id\",\n      component: ViewStoreDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/products\",\n      render: () => React.createElement(Products, {\n        products: this.state.products,\n        handleDeleteProduct: this.handleDeleteProduct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/products/add\",\n      component: AddNewProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/products/add/:store_name/:store_id\",\n      component: AddProductToStore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/inventory\",\n      render: () => React.createElement(Inventory, {\n        inventory: this.state.inventory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/inventory/add\",\n      component: AddNewInventory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/inventory/:inventory_id/:store_id\",\n      component: UpdateInventoryProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sharon.santana/Desktop/prod_projects/InventorySystem/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","swal","AddNewStore","AddNewProduct","AddProductToStore","UpdateInventoryProduct","ViewStoreDetails","AddNewInventory","Nav","Dashboard","Stores","Products","Inventory","Footer","axios","App","constructor","handleDeleteStore","id","title","text","icon","buttons","dangerMode","then","willDelete","delete","headers","response","get","setState","stores","data","catch","e","console","log","handleDeleteProduct","products","state","inventory","bind","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport swal from 'sweetalert';\n\n// import containers\nimport AddNewStore from './containers/AddNewStore';\nimport AddNewProduct from './containers/AddNewProduct';\nimport AddProductToStore from './containers/AddProductToStore';\nimport UpdateInventoryProduct from './containers/UpdateInventoryProduct';\nimport ViewStoreDetails from './containers/ViewStoreDetails';\nimport AddNewInventory from './containers/AddNewInventory';\n\n// import Components\nimport Nav from './components/Nav';\nimport Dashboard from './components/Dashboard';\nimport Stores from './components/Stores';\nimport Products from './components/Products';\nimport Inventory from './components/Inventory';\nimport Footer from './components/Footer';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      stores: [],\n      products: [],\n      inventory: []\n    };\n    this.handleDeleteStore = this.handleDeleteStore.bind(this);\n  }\n  componentDidMount() {\n    axios.get('/api/stores')\n      .then(response => {\n        this.setState({ stores: response.data });\n        // console.log(this.state);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n\n    axios.get('/api/products')\n      .then(response => {\n        this.setState({ products: response.data });\n        // console.log(this.state);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n\n    axios.get('/api/inventory')\n      .then(response => {\n        this.setState({ inventory: response.data });\n        // console.log(this.state);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  handleDeleteStore = (id) => {\n\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this store's records!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n      .then((willDelete) => {\n        if (willDelete) {\n          // handle the deletion of a store entry in the DB\n          axios.delete(`http://localhost:3001/api/stores/${id}`, { headers: { 'Accept': 'application/json' } })\n            .then(response => {\n              // fetch the new list of stores\n              axios.get('/api/stores')\n                .then(response => {\n                  this.setState({ stores: response.data });\n                })\n                .catch(e => {\n                  console.log(e);\n                });\n            })\n            .catch(e => {\n              console.log(e);\n            });\n          swal(\"Success! The Store record has been deleted!\", {\n            icon: \"success\",\n          });\n        }\n      });\n  }\n\n  handleDeleteProduct = (id) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this store's records!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n      .then((willDelete) => {\n        if (willDelete) {\n // handle the deletion of a product across all stores\n axios.delete(`http://localhost:3001/api/products/${id}`, { headers: { 'Accept': 'application/json' } })\n .then(response => {\n   // fetch the new list of products\n   axios.get('/api/products')\n     .then(response => {\n       this.setState({ products: response.data });\n     })\n     .catch(e => {\n       console.log(e);\n     });\n })\n .catch(e => {\n   console.log(e);\n });\n         \n        }\n      });\n\n\n   \n  }\n\n  render() {\n    return (\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/stores' render={() => <Stores stores={this.state.stores} handleDeleteStore={this.handleDeleteStore} />} />\n          <Route exact path='/stores/add' component={AddNewStore} />\n          <Route exact path='/stores/products/:store_id' component={ViewStoreDetails} />\n          <Route exact path='/products' render={() => <Products products={this.state.products} handleDeleteProduct={this.handleDeleteProduct} />} />\n          <Route exact path='/products/add' component={AddNewProduct} />\n          <Route exact path='/products/add/:store_name/:store_id' component={AddProductToStore} />\n          <Route exact path='/inventory' render={() => <Inventory inventory={this.state.inventory} />} />\n          <Route exact path='/inventory/add' component={AddNewInventory} />\n          <Route exact path='/inventory/:inventory_id/:store_id' component={UpdateInventoryProduct} />\n        </Switch>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}